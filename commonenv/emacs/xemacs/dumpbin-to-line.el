(defun dumpbin-to-line (name)
  "Convert result of dumpbin to a line of output"
  (let (data rdata text start)
    (beginning-of-buffer)
    (search-forward ".data")
    (backward-sexp 2)
    (let ((start (point)))
      (forward-word 1)
      (setq data (string-to-number (buffer-substring start (point)) 16))
      )
    (search-forward ".rdata")
    (backward-sexp 2)
    (let ((start (point)))
      (forward-word 1)
      (setq rdata (string-to-number (buffer-substring start (point)) 16))
      )
    (search-forward ".text")
    (backward-sexp 2)
    (let ((start (point)))
      (forward-word 1)
      (setq text (string-to-number (buffer-substring start (point)) 16))
      )
    (format "%s,%s,%s,%s" name data rdata text)
    ))

